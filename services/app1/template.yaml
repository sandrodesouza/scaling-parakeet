AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: a simple loan application - App1

Parameters:
  Stage:
    Type: String
  # JwtIssuer:
  #   Type: String
  # JwtAudience:
  #   Type: String
  LoanTable:
    Type: String
  App2ApiEndpoint:
    Type: String
  App2ApiKey:
    Type: String
  OpenKvkHostName:
    Type: String
    Default: 'api.overheid.io'
  OpenKvkApiKey:
    Type: String
    Default: 'fakeKey'

Globals:
  Function:
    Runtime: nodejs14.x
    Timeout: 25
    Handler: index.handler
    MemorySize: 128
    Environment:
      Variables:
        ENV: !Ref Stage
        OPEN_KVK_API_KEY: !Ref OpenKvkApiKey
        OPEN_KVK_HOSTNAME: !Ref OpenKvkHostName
        LOAN_DYNAMO_TABLE: !Ref LoanTable

Resources:
  # REST API using JWT as Authorizer
  AppApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors: "'*'"
      Auth:
        # Authorizers:
        #   JwtAuthorizer:
        #     IdentitySource: '$request.header.Authorization'
        #     JwtConfiguration:
        #       issuer: !Ref JwtIssuer
        #       audience:
        #         - !Ref JwtAudience
        DefaultAuthorizer: NONE

  LoansDisburse:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/http/loans/disburse/post
      Environment:
        Variables:
          INTERNAL_APP2_API_KEY: !Ref App2ApiKey
          INTERNAL_APP2_HOSTNAME: !Ref App2ApiEndpoint
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref LoanTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref AppApi
            Path: /loans/disburse
            Method: post
  LoansList:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/http/loans/get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref LoanTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref AppApi
            Path: /loans
            Method: get
  LoansCreate:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/http/loans/post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LoanTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref AppApi
            Path: /loans
            Method: post
  LoansDelete:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/http/loans/delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LoanTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref AppApi
            Path: /loans/{id}
            Method: delete

Outputs:
  # API Gateway endpoint
  AppApiEndpoint:
    Description: 'API Endpoint'
    Value: !Sub 'https://${AppApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}'
